TYPO3:
  CMS:
    Policy:
      policies:
        Backend:
          policies:
            Dashboard:
                target: 'resource.class matches "/^dashboard/"'
                description: Dashboard policy set.
                algorithm: highestPriority
                priority: 50
                policies:
                  Widget:
                    target: 'resource.class == "dashboard:widget"'
                    description: Widget resource policy set.
                    algorithm: highestPriority
                    priority: 20
                    policies:
                      User:
                        description: Primary principal policy.
                        algorithm: denyOverrides
                        priority: 30
                        rules:
                          -
                            target: 'hasPermission("cms:backend:user", resource.dashboard.identifier, action.class, "deny")'
                            effect: deny
                          -
                            target: 'hasPermission("cms:backend:user", resource.dashboard.identifier, action.class, "permit")'
                            effect: permit
                      Group:
                        description: Secondary principal policy.
                        algorithm: denyOverrides
                        priority: 20
                        rules:
                          -
                            target: 'hasPermission("cms:backend:group", resource.dashboard.identifier, action.class, "deny")'
                            effect: deny
                          -
                            target: 'hasPermission("cms:backend:group", resource.dashboard.identifier, action.class, "permit")'
                            effect: permit
                      Type:
                        description: Widget type policy.
                        algorithm: highestPriority
                        priority: 10
                        policies:
                          User:
                            description: Primary principal policy.
                            algorithm: denyOverrides
                            priority: 20
                            rules:
                              -
                                target: 'hasPermission("cms:backend:user", resource.type, action.class, "deny")'
                                effect: deny
                              -
                                target: 'hasPermission("cms:backend:user", resource.type, action.class, "permit")'
                                effect: permit
                          Group:
                            description: Secondary principal policy.
                            algorithm: denyOverrides
                            priority: 10
                            rules:
                              -
                                target: 'hasPermission("cms:backend:group", resource.type, action.class, "deny")'
                                effect: deny
                              -
                                target: 'hasPermission("cms:backend:group", resource.type, action.class, "permit")'
                                effect: permit
                  Dashboard:
                    target: 'resource.class in ["dashboard:dashboard", "dashboard:widget"]'
                    description: Dashboard resource policy set.
                    algorithm: highestPriority
                    priority: 10
                    policies:
                      User:
                        description: Primary principal policy.
                        algorithm: denyOverrides
                        priority: 20
                        rules:
                          -
                            target: 'hasPermission("cms:backend:user", resource.identifier, action.class, "deny")'
                            effect: deny
                          -
                            target: 'hasPermission("cms:backend:user", resource.identifier, action.class, "permit")'
                            effect: permit
                      Group:
                        description: Secondary principal policy.
                        algorithm: denyOverrides
                        priority: 10
                        rules:
                          -
                            target: 'hasPermission("cms:backend:group", resource.identifier, action.class, "deny")'
                            effect: deny
                          -
                            target: 'hasPermission("cms:backend:group", resource.identifier, action.class, "permit")'
                            effect: permit
                      Default:
                        description: Fallback policy.
                        rules:
                          -
                            effect: permit
